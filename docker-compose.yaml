version: "3"
services:
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "${WEB_PORT}:3000"
    environment:
      - API_URL=http://api:8000
      - AUTH_SECRET=${AUTH_SECRET}
    container_name: web
    restart: unless-stopped

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:8000"
    environment:
      - API_PORT=8000
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASS=${ADMIN_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - ANIMES_FOLDER=${ANIMES_FOLDER}
      - ACCESS_TOKEN_EXP_MIN=${ACCESS_TOKEN_EXP_MIN}
      - REFRESH_TOKEN_EXP_DAY=${REFRESH_TOKEN_EXP_DAY}
      # Uncomment the following lines to enable logging
      # - LOG_APP_PATH=${LOG_FOLDER}/app.log
      # - LOG_ERROR_PATH=${LOG_FOLDER}/error.log
    volumes:
      - ${DOCKER_DATA}/animes:${ANIMES_FOLDER}
      # Uncomment the following line to enable logging
      # - ${DOCKER_DATA}/api-logs:${LOG_FOLDER}
    depends_on:
      - db
      - redis
    container_name: api
    restart: unless-stopped

  flower:
    image: mher/flower
    command: celery flower --persistent=True
    ports:
      - "4002:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=5555
    container_name: flower

  db:
    image: postgres:17.0
    ports:
      - "4003:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./backend/src/databases/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: db
    restart: unless-stopped

  redis:
    image: redis:6.2
    ports:
      - "4004:6379"
    container_name: redis
    restart: unless-stopped

  celery-worker:
    build:
      context: ./queue
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - MAX_DOWNLOAD_RETRIES=${MAX_DOWNLOAD_RETRIES}
      - RETRY_DOWNLOAD_INTERVAL=${RETRY_DOWNLOAD_INTERVAL}
      - ANIMES_FOLDER=${ANIMES_FOLDER}
      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ${DOCKER_DATA}/animes:${ANIMES_FOLDER}
    depends_on:
      - db
      - redis
    container_name: celery-worker
    restart: unless-stopped

  web-remote:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL_REMOTE=${NEXT_PUBLIC_API_URL_REMOTE}
    ports:
      - "${WEB_REMOTE_PORT}:3000"
    environment:
      - API_URL=http://api:8000
      - AUTH_SECRET=${AUTH_SECRET}
    container_name: web-remote
    restart: unless-stopped
    profiles:
      - remote
